apply plugin: 'com.android.application'
apply plugin: 'walle'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'


android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'
    defaultConfig {
        applicationId "com.zs.various"
        minSdkVersion 23
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        // 支持lambda表达式
//        compileOptions {
//            sourceCompatibility JavaVersion.VERSION_1_8
//            targetCompatibility JavaVersion.VERSION_1_8
//        }
    }

    signingConfigs {
        pkg {
            storeFile file("keystore/test.jks")
            storePassword "qazwsx"
            keyAlias "test"
            keyPassword "qazwsx"
            v2SigningEnabled true//是否启用APK Signature Scheme v2
        }
    }

    buildTypes {
        release {
            minifyEnabled false//minifyEnabled是否启用混淆
            shrinkResources false//删除无效的Resource
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.pkg
        }
    }
    sourceSets{
        main{
            jniLibs.srcDirs=['libs']
        }
    }
}

kotlin {
    experimental {
        coroutines 'enable'
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    androidTestImplementation('androidx.test.espresso:espresso-core:3.1.0', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation "org.jetbrains.anko:anko-common:$anko_version"

    // Coroutine 协程
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"

    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    //    compile 'com.jakewharton:butterknife:7.0.1'
    // 绑定数据
    implementation "com.meituan.android.walle:library:$walle_version"
    // 美团批量打包
    implementation 'com.squareup.picasso:picasso:2.5.2'
    // 图片
    implementation 'com.github.bumptech.glide:glide:4.9.0'
    // 图片
    implementation 'com.github.iwgang:countdownview:2.1.6'
    // 倒计时
    implementation 'com.alibaba:fastjson:1.1.60.android'
    implementation 'com.google.code.gson:gson:2.6.2'
    // Gson解析
    implementation 'com.flaviofaria:kenburnsview:1.0.7'
    // 背景大图移动view
    //    compile 'fm.jiecao:jiecaovideoplayer:5.8.1'
    // 视频
    testImplementation 'junit:junit:4.12'
    implementation 'com.squareup.okhttp3:okhttp:3.6.0'
    implementation files('libs/tbs_sdk_thirdapp_v3.6.0.1325_43613_sharewithdownload_withoutGame_obfs_20180807_151115.jar')
    implementation 'io.reactivex.rxjava2:rxjava:2.1.3'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    // 沉浸式状态栏
    implementation 'com.jaeger.statusbarutil:library:1.5.1'
    // 状态栏
    implementation 'com.githang:status-bar-compat:0.2'

    implementation 'com.github.QQzs:BorderView:1.0.6'
    // 鲁班压缩
    implementation 'top.zibin:Luban:1.1.8'

    implementation 'com.zhy:base-rvadapter:3.0.3'

//    implementation 'com.github.florent37:glidepalette:2.1.2'

    implementation 'androidx.palette:palette:1.0.0'

    implementation 'androidx.multidex:multidex:2.0.0'

    implementation 'com.scwang.smartrefresh:SmartRefreshLayout:1.1.0'

    implementation 'com.github.tbruyelle:rxpermissions:0.10.2'

    implementation 'cn.bingoogolapple:bga-baseadapter:2.0.0@aar'


}

walle {
    // 指定渠道包的输出路径
//    apkOutputFolder = new File("${project.buildDir}/outputs/channels");
    apkOutputFolder = new File("D:/APK/MakeAPK")
    // 定制渠道包的APK的文件名称
    apkFileNameFormat = '${appName}-${packageName}-${channel}-${buildType}-v${versionName}-${versionCode}-${buildTime}.apk';
    // 渠道配置文件
    channelFile = new File("${project.getProjectDir()}/channel.txt")
}
